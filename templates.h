#pragma once

PROGMEM const char HUE_DESCRIPTION_TEMPLATE[] =
"<?xml version=\"1.0\" ?>"
"<root xmlns=\"urn:schemas-upnp-org:device-1-0\">"
    "<specVersion><major>1</major><minor>0</minor></specVersion>"
    "<URLBase>http://%d.%d.%d.%d:80/</URLBase>"
    "<device>"
        "<deviceType>urn:schemas-upnp-org:device:Basic:1</deviceType>"
        "<friendlyName>Philips hue (%d.%d.%d.%d:80)</friendlyName>"
        "<manufacturer>Royal Philips Electronics</manufacturer>"
        "<manufacturerURL>http://www.philips.com</manufacturerURL>"
        "<modelDescription>Philips hue Personal Wireless Lighting</modelDescription>"
        "<modelName>Philips hue bridge 2012</modelName>"
        "<modelNumber>929000226503</modelNumber>"
        "<modelURL>http://www.meethue.com</modelURL>"
        "<serialNumber>%s</serialNumber>"
        "<UDN>uuid:2f402f80-da50-11e1-9b23-%s</UDN>"
        "<presentationURL>index.html</presentationURL>"
    "</device>"
"</root>";


PROGMEM const char HUE_USER_JSON_TEMPLATE[] = 
"["
    "{"
        "\"success\":"
        "{"
            "\"usernasme\": \"%s\""
        "}"
    "}"
"]";

PROGMEM const char HUE_DEVICE_JSON_TEMPLATE[] = 
"{"
    "\"type\": \"Extended color light\","
    "\"name\": \"%s\","
    "\"uniqueid\": \"%s\","
    "\"modelid\": \"LCT015\","
    "\"manufacturername\": \"Philips\","
    "\"productname\": \"E4\","
    "\"state\":{"
        "\"on\": %s,"
        "\"bri\": %d,"
//        "\"xy\": [0,0],"
        "\"hue\": %d,"
        "\"sat\": %d,"
        "\"ct\": %d,"
        "\"colormode\": \"%s\","
        "\"effect\": \"none\","
        "\"mode\": \"homeautomation\","
        "\"reachable\": true"
    "},"
    "\"swversion\": \"1.53.3_r27175\""
"}";

PROGMEM const char HUE_ERROR_TEMPLATE[] = 
"["
"	{"
"		\"error\": {"
"			\"type\": %d,"
"			\"address\": \"%s\","
"			\"description\": \"%s\""
"		}"
"	}"
"]";



PROGMEM const char INDEX_PAGE[] =
"<!DOCTYPE html>"
"<html lang='en'>"
"    <head>"
"        <meta charset='UTF-8'>"
"        <meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no'>"
"        <link rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css' crossorigin='anonymous'>"
"        <title>Hue Bridge</title>"
"        <script>"
""
"            function sendData(on, bri, ct, hue, sat){"
"                id = 1;"
"                data = {};"
"                data.on = on;"
"                if ( bri >= 0 ){"
"                    data.bri = bri;"
"                }"
"                if ( ct >= 0 ){"
"                    data.ct = ct;"
"                }"
"                if ( hue >= 0 ){"
"                    data.hue = hue;"
"                }"
"                if ( sat >= 0 ){"
"                    data.sat = sat;"
"                }"
""
"                var xhr = new XMLHttpRequest();"
"                xhr.open('PUT', '/api/userid/lights/' + id + '/state', true);"
"                xhr.setRequestHeader('Content-Type', 'application/json');"
"                xhr.send(JSON.stringify(data));"
"            }"
"        </script>"
""
"        <script src='https://code.jquery.com/jquery-3.5.1.min.js' crossorigin='anonymous'></script>"
"    </head>"
"    <body style='background-color: rgb(85, 85, 85); margin: 40px; color: white;'>"
"        <center>"
""
"            <button style='width: 100px;' type='button' class='btn btn-success' onclick='sendData(true, -1, -1, -1 ,-1);'>On</button>"
"            <button style='width: 100px;' type='button' class='btn btn-dark' onclick='sendData(false , -1, -1, -1 , -1);'>Off</button>"
"            <br/>"
"            <br/>"
"            <button style='width: 200px;' type='button' class='btn btn-warning' onclick='sendData(true, -1, 383, -1, -1);'>Warm white</button>"
"            <br/>"
"            <br/>"
""
"            <button style='width: 100px;' type='button' class='btn btn-danger' onclick='sendData(true, -1, -1, 0, 254);'>Red</button>"
"            <button style='width: 100px;' type='button' class='btn btn-success' onclick='sendData(true, -1, -1, 21845, 254);'>Green</button>"
"            <button style='width: 100px;' type='button' class='btn btn-primary' onclick='sendData(true, -1, -1, 43690, 254);'>Blue</button>"
""
"            <br/>"
""
"        </center>"
"    </body>"
"</html>";


PROGMEM const char CLIP_PAGE[] =
"<html>\n"
"\n"
"<head>\n"
"    <title>API Debug tool</title>\n"
"    <style>\n"
"        body {\n"
"            font-family: verdana;\n"
"            margin: 20px;\n"
"        }\n"
"        \n"
"        h1 {\n"
"            margin: 0px;\n"
"            font-size: 20px;\n"
"        }\n"
"        \n"
"        h2 {\n"
"            font-size: 16px;\n"
"            margin-top: 20px;\n"
"            color: grey;\n"
"        }\n"
"        \n"
"        #buttons {\n"
"            clear: left;\n"
"        }\n"
"        \n"
"        input {\n"
"            width: 100%%;\n"
"        }\n"
"        \n"
"        form {\n"
"            background: #e8e8e8;\n"
"            width: 500px;\n"
"            padding: 20px;\n"
"            -webkit-border-radius: 10px;\n"
"            -moz-border-radius: 10px;\n"
"        }\n"
"        \n"
"        textarea {\n"
"            padding-top: 10px;\n"
"            width: 100%%;\n"
"            font-family: monaco, monospace;\n"
"            font-size: 12px;\n"
"            -webkit-border-radius: 10px;\n"
"            -moz-border-radius: 10px;\n"
"        }\n"
"    </style>\n"
"    <script>\n"
"        function getHTML(command) {\n"
"            if (window.XMLHttpRequest) {\n"
"                var http = new XMLHttpRequest();\n"
"                http.open(command, document.commandform.commandurl.value, true);\n"
"                http.onreadystatechange = function() {\n"
"                    if (http.readyState == 4) {\n"
"                        if (http.status == 200) {\n"
"                            document.commandform.response.value = 'Bad JSON: ' + http.responseText;\n"
"                            document.commandform.response.value = JSON.stringify(JSON.parse(http.responseText), null, '\t');\n"
"                        } else {\n"
"                            document.commandform.response.value = 'Error ' + http.status;\n"
"                        }\n"
"                    }\n"
"                }\n"
"                http.send(document.commandform.messagebody.value);\n"
"            }\n"
"            return false;\n"
"        }\n"
"\n"
"        function main() {\n"
"            var btnGrp = document.querySelectorAll('button');\n"
"            Array.from(btnGrp).forEach(function(btn) {\n"
"                document.getElementById(btn.id).addEventListener('click', function() {\n"
"                    getHTML(btn.value);\n"
"                });\n"
"            });\n"
"        }\n"
"\n"
"        document.addEventListener('DOMContentLoaded', function(event) {\n"
"            main();\n"
"        });\n"
"    </script>\n"
"</head>\n"
"\n"
"<body>\n"
"    <form name='commandform'>\n"
"        <h1>CLIP API Debugger</h1>\n"
"        <h2>URL:</h2>\n"
"        <input name='commandurl' type='text' size='60' value='/api/userid/lights'>\n"
"        <div id='buttons'>\n"
"            <button type='button' id='btnGet' value='GET'>GET</button>\n"
"            <button type='button' id='btnPut' value='PUT'>PUT</button>\n"
"            <button type='button' id='btnPost' value='POST'>POST</button>\n"
"            <button type='button' id='btnDelete' value='DELETE'>DELETE</button>\n"
"        </div>\n"
"        <h2>Message Body:</h2>\n"
"        <textarea name='messagebody' rows='10' cols='100'></textarea>\n"
"        <h2>Command Response:</h2>\n"
"        <textarea name='response' rows='25' cols='100'></textarea>\n"
"    </form>\n"
"</body>\n"
"\n"
"</html>\n";
